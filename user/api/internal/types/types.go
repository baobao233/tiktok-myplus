// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.3

package types

type LoginReq struct {
	Mobile   string `json:"mobile"`
	Password string `json:"password "`
}

type LoginResp struct {
	UserId          int64  `json:"user_id"`
	Name            string `json:"name"`
	Gender          uint32 `json:"gender"`
	Avatar          string `json:"avatar"`
	Signature       string `json:"signature"`
	BackgroundImage string `json:"background_image"`
	StatusCode      int    `json:"status_code"`
	StatusMsg       string `json:"status_msg"`
	AccessToken     string `json:"access_token"`
}

type RegestryReq struct {
	Name            string `json:"name"`
	Gender          uint32 `json:"gender"`
	Mobile          string `json:"mobile"`
	Password        string `json:"password"`
	Dec             string `json:"dec"`
	Avatar          string `json:"avatar"`
	BackgroundImage string `json:"background_image"`
}

type RegestryResp struct {
	StatusCode int    `json:"status_code"`
	StatusMsg  string `json:"status_msg"`
}

type UpdateUserInfoReq struct {
	Name            string `json:"name"`
	Gender          uint32 `json:"gender"`
	Avatar          string `json:"avatar"`
	Dec             string `json:"dec,optional"`
	BackgroundImage string `json:"background_image,optional"`
}

type UpdateUserInfoResp struct {
	StatusCode int    `json:"status_code"`
	StatusMsg  string `json:"status_msg"`
}

type UploadImageResp struct {
	StatusCode int    `json:"status_code"`
	StatusMsg  string `json:"status_msg"`
	Url        string `json:"url"`
}

type User struct {
	Id                   uint32 `json:"id"`
	Name                 string `json:"name"`
	Gender               uint32 `json:"gender"`
	Avatar               string `json:"avatar"`
	Signature            string `json:"signature"`
	BackgroundImage      string `json:"background_image"`
	FollowCount          uint32 `json:"follow_count"`
	FollowerCount        uint32 `json:"follower_count"`
	IsFollow             bool   `json: is_follow`
	FavoriteCount        uint32 `json:"favorite_count"` // 点赞总数
	TotallFavoritedCount uint32 `json:"follower_count"` // 被点赞总数
	WorkCount            uint32 `json:"work_count"`     // 作品总数
	FriendCount          int64  `json:"friend_count"`   // 朋友数量
}

type UserInfoReq struct {
	Uid int64 `json:"uid"`
}

type UserInfoResp struct {
	StatusCode int    `json:"status_code"`
	StatusMsg  string `json:"status_msg"`
	User       User   `json:"user"`
}

type UserUploadResp struct {
	StatusCode int    `json:"status_code"`
	StatusMsg  string `json:"status_msg"`
	Url        string `json:"url"`
	CoverUrl   string `json:"coverUrl"`
}
